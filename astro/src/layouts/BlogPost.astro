---
import type { CollectionEntry } from "astro:content";
import BaseHead from "../components/BaseHead.astro";
import Header from "../components/Header.astro";
import Footer from "../components/Footer.astro";
import FormattedDate from "../components/FormattedDate.astro";
import EditMeOnGithub from "../components/EditMeOnGithub.astro";
import HeroImage from "../components/HeroImage.astro";

type Props = CollectionEntry<"blog">["data"];

const {
	title,
	description,
	pubDate,
	updatedDate,
	heroImage,
	minutesRead,
	file,
	isError,
} = Astro.props;
---

<html lang="en">
	<head>
		<BaseHead title={title} description={description} />
		<style>
			main {
				width: calc(100% - 2em);
				max-width: 100%;
				margin: 0;
			}
			.hero-image {
				width: 100%;
			}
			.prose {
				width: var(--max-prose-width);
				max-width: calc(100% - 2em);
				margin: auto;
				padding: 1em;
				color: var(--prose-text);
			}
			.title {
				margin-bottom: 1em;
				padding: 1em 0;
				text-align: center;
				line-height: 1;
			}
			.title h1 {
				margin: 0 0 0.5em 0;
			}
			.date {
				margin-bottom: 0.5em;
				color: var(--text-secondary);
			}
			.last-updated-on {
				font-style: italic;
			}
		</style>
	</head>

	<body>
		<Header />
		<main>
			<article>
				<div class="hero-image">
					{
						!isError && (
							<HeroImage
								alt=""
								file={file}
								heroImage={heroImage}
							/>
						)
					}
				</div>
				<div class="prose">
					<div class="title">
						<div class="date">
							{!isError && <FormattedDate date={pubDate} />}
							{
								updatedDate && (
									<div class="last-updated-on">
										Last updated on{" "}
										<FormattedDate date={updatedDate} />
									</div>
								)
							}
							{minutesRead && `~${minutesRead}`}
						</div>
						<h1>{title}</h1>
						<hr />
					</div>
					<slot />
					{file && <hr /> && <EditMeOnGithub localFilePath={file} />}
					<script>
						document.addEventListener("DOMContentLoaded", () => {
							// Set giscus theme
							const giscusHookEl =
								document.getElementById("giscus-script");
							if (giscusHookEl) {
								const theme =
									document.documentElement.classList.contains(
										"theme-dark",
									)
										? "dark"
										: "light";
								const attributes = {
									src: "https://giscus.app/client.js",
									"data-repo": "Somrlik/karelsyrovy.cz",
									"data-repo-id": "R_kgDOMkbJjQ",
									"data-category": "Announcements",
									"data-category-id": "DIC_kwDOMkbJjc4Chu0S",
									"data-mapping": "pathname",
									"data-strict": "0",
									"data-reactions-enabled": "1",
									"data-emit-metadata": "0",
									"data-input-position": "bottom",
									"data-theme": theme,
									"data-lang": "en",
									"data-loading": "lazy",
									crossorigin: "anonymous",
									async: "",
								};
								const giscusScriptEl =
									document.createElement("script");
								Object.entries(attributes).forEach(
									(attributePair) => {
										giscusScriptEl.setAttribute(
											attributePair[0],
											attributePair[1],
										);
									},
								);

								giscusHookEl.replaceWith(giscusScriptEl);
							}
						});
					</script>
					{!isError && <div id="giscus-script" />}
					{!isError && <hr />}
				</div>
				<hr />
			</article>
		</main>
		<Footer />
	</body>
</html>
